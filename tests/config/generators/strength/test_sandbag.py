import pytest

from garminworkouts.config.generators.strength.sandbag import (
    around_the_world_rep_generator,
    around_the_world_hold_generator,
    back_squat_rep_generator,
    back_squat_hold_generator,
    bear_crawl_pull_through_rep_generator,
    bear_crawl_pull_through_hold_generator,
    bear_hug_squat_rep_generator,
    bear_hug_squat_hold_generator,
    clean_rep_generator,
    clean_hold_generator,
    clean_and_press_rep_generator,
    clean_and_press_hold_generator,
    curl_rep_generator,
    curl_hold_generator,
    front_carry_rep_generator,
    front_carry_hold_generator,
    front_squat_rep_generator,
    front_squat_hold_generator,
    lunge_rep_generator,
    lunge_hold_generator,
    overhead_press_rep_generator,
    overhead_press_hold_generator,
    plank_pull_through_rep_generator,
    plank_pull_through_hold_generator,
    rotational_lunge_rep_generator,
    rotational_lunge_hold_generator,
    row_rep_generator,
    row_hold_generator,
    russian_twist_rep_generator,
    russian_twist_hold_generator,
    shouldering_rep_generator,
    shouldering_hold_generator,
    shoveling_rep_generator,
    shoveling_hold_generator,
    side_lunge_rep_generator,
    side_lunge_hold_generator,
    sprint_rep_generator,
    sprint_hold_generator,
    zercher_squat_rep_generator,
    zercher_squat_hold_generator,
    )


@pytest.mark.parametrize("generator, exercise_name, execution", [
    (around_the_world_rep_generator,
     'AROUND_THE_WORLD',
     'reps'),
    (around_the_world_hold_generator,
     'AROUND_THE_WORLD',
     'hold'),
    (back_squat_rep_generator,
     'BACK_SQUAT',
     'reps'),
    (back_squat_hold_generator,
     'BACK_SQUAT',
     'hold'),
    (bear_crawl_pull_through_rep_generator,
     'BEAR_CRAWL_PULL_THROUGH',
     'reps'),
    (bear_crawl_pull_through_hold_generator,
     'BEAR_CRAWL_PULL_THROUGH',
     'hold'),
    (bear_hug_squat_rep_generator,
     'BEAR_HUG_SQUAT',
     'reps'),
    (bear_hug_squat_hold_generator,
     'BEAR_HUG_SQUAT',
     'hold'),
    (clean_rep_generator,
     'CLEAN',
     'reps'),
    (clean_hold_generator,
     'CLEAN',
     'hold'),
    (clean_and_press_rep_generator,
     'CLEAN_AND_PRESS',
     'reps'),
    (clean_and_press_hold_generator,
     'CLEAN_AND_PRESS',
     'hold'),
    (curl_rep_generator,
     'CURL',
     'reps'),
    (curl_hold_generator,
     'CURL',
     'hold'),
    (front_carry_rep_generator,
     'FRONT_CARRY',
     'reps'),
    (front_carry_hold_generator,
     'FRONT_CARRY',
     'hold'),
    (front_squat_rep_generator,
     'FRONT_SQUAT',
     'reps'),
    (front_squat_hold_generator,
     'FRONT_SQUAT',
     'hold'),
    (lunge_rep_generator,
     'LUNGE',
     'reps'),
    (lunge_hold_generator,
     'LUNGE',
     'hold'),
    (overhead_press_rep_generator,
     'OVERHEAD_PRESS',
     'reps'),
    (overhead_press_hold_generator,
     'OVERHEAD_PRESS',
     'hold'),
    (plank_pull_through_rep_generator,
     'PLANK_PULL_THROUGH',
     'reps'),
    (plank_pull_through_hold_generator,
     'PLANK_PULL_THROUGH',
     'hold'),
    (rotational_lunge_rep_generator,
     'ROTATIONAL_LUNGE',
     'reps'),
    (rotational_lunge_hold_generator,
     'ROTATIONAL_LUNGE',
     'hold'),
    (row_rep_generator,
     'ROW',
     'reps'),
    (row_hold_generator,
     'ROW',
     'hold'),
    (russian_twist_rep_generator,
     'RUSSIAN_TWIST',
     'reps'),
    (russian_twist_hold_generator,
     'RUSSIAN_TWIST',
     'hold'),
    (shouldering_rep_generator,
     'SHOULDERING',
     'reps'),
    (shouldering_hold_generator,
     'SHOULDERING',
     'hold'),
    (shoveling_rep_generator,
     'SHOVELING',
     'reps'),
    (shoveling_hold_generator,
     'SHOVELING',
     'hold'),
    (side_lunge_rep_generator,
     'SIDE_LUNGE',
     'reps'),
    (side_lunge_hold_generator,
     'SIDE_LUNGE',
     'hold'),
    (sprint_rep_generator,
     'SPRINT',
     'reps'),
    (sprint_hold_generator,
     'SPRINT',
     'hold'),
    (zercher_squat_rep_generator,
     'ZERCHER_SQUAT',
     'reps'),
    (zercher_squat_hold_generator,
     'ZERCHER_SQUAT',
     'hold'),
    ])
def test_exercise_generators(generator, exercise_name, execution):
    duration = "10reps" if execution == 'reps' else 'lap.button'
    description = exercise_name.replace('_', ' ').title() if execution == 'reps' else "10-count hold"
    result = generator(10)
    assert result['category'] == 'SANDBAG'
    assert result['exerciseName'] == exercise_name
    assert result['duration'] == duration
    assert result['target'] == 'NO_TARGET'
    assert result['description'] == description
